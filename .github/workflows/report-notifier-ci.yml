name: Report Notifier CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'infrastructure/modules/services/report-notifier/**'
      - 'infrastructure/prod/services/report-notifier/**'
      - 'infrastructure/stage/services/report-notifier/**'
      - 'services/report-notifier/**'
      - '.github/workflows/report-notifier/terraform.yml'
  pull_request:
    paths:
      - 'infrastructure/modules/services/report-notifier/**'
      - 'infrastructure/prod/services/report-notifier/**'
      - 'infrastructure/stage/services/report-notifier/**'
      - 'services/report-notifier/**'
      - '.github/workflows/report-notifier/terraform.yml'

jobs:
  test-build-and-upload:
    name: Test, Build and Upload Artifact
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    environment:
      name: ${{ github.ref_name == 'main' && 'prod' || 'stage' }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      ROLE_ARN: ${{ secrets.AWS_IAM_ROLE_ARN }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.6.0'
          cache: 'npm'
          cache-dependency-path: services/report-notifier/package-lock.json

      - name: Install Dependencies
        working-directory: ./services/report-notifier
        run: npm install

      - name: Run Unit Tests
        working-directory: ./services/report-notifier
        run: npm run test:ci

      - name: Build Code
        working-directory: ./services/report-notifier
        run: npm run build

      - name: Package Lambda function
        run: zip -j function.zip services/report-notifier/dist/*

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload artifact to S3
        run: aws s3 cp function.zip s3://${{ vars.S3_ARTIFACT_BUCKET }}/report-notifier.zip
